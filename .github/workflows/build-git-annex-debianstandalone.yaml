name: Build git-annex snapshot

on:
  # Trigger the workflow on pull request,
  pull_request:
    paths:
      - '.github/workflows/build-git-annex-debianstandalone.yaml'
  schedule:
    - cron: '30 01 * * *'

env:
  LANG: C
  DEB_SIGN_KEYID: 13A1093296154584245E0300C98FC49D36DAB17F

jobs:
  build-package:
    runs-on: ubuntu-latest
    strategy:
      # Do not fail fast so we could upload full build log and possible source
      # pkgs even if binary package building fails
      fail-fast: false
    steps:
    - name: Set up system
      shell: bash
      run: |
        bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
        sudo apt-get update -qq
        sudo apt-get install eatmydata
        sudo eatmydata apt-get install singularity-container gnupg moreutils

    - name: Checkout this repository
      uses: actions/checkout@v1

    - name: Import GPG keys
      run: |
        # private key for signing - comes from secrets
        echo '${{ secrets.datalad_builder_gpgkey }}' | gpg --import
        # public key for verification
        cat resources/datalad-builder-key.asc | gpg --import

    - name: Building it all
      run: |
        DEB_BUILD_OPTIONS=nocheck scripts/ci/build_git_annex /tmp/annex-build

    - name: Cleanup before bundling upload
      run: find /tmp/annex-build -mindepth 1 -maxdepth 1 -type d -print0 | xargs -0 rm -rf

    - name: Upload packages
      uses: actions/upload-artifact@v2-preview
      with:
          name: git-annex-debianstandalone-packages
          # v2-preview supports globs (https://github.com/actions/upload-artifact/issues/62)
          path: /tmp/annex-build/git-annex[-_]*.*

  test-annex:
    runs-on: ubuntu-latest
    needs: build-package
    strategy:
      matrix:
        flavor: [normal, crippled-tmp, crippled-home]
      fail-fast: false

    steps:
      - name: Download git-annex package
        uses: actions/download-artifact@v2-preview
        with:
          name: git-annex-debianstandalone-packages

      - name: Install git-annex package
        run: |
          sudo dpkg -i git-annex*.deb

      - name: Checkout this repository for scripts/ci
        uses: actions/checkout@v1

      - name: Set up system
        shell: bash
        run: |
          if echo "${{ matrix.flavor }}" | grep -q "crippled" ; then
            scripts/ci/setup_crippledfs /crippledfs 500
          fi

      - name: Run tests
        run: |
          case "${{ matrix.flavor }}" in
            crippled-tmp)
              # forces all test repos/paths into the VFAT FS
              export TMPDIR=/crippledfs
              ;;
            crippled-home)
              export HOME=/crippledfs
              ;;
            normal)
              ;;
            *)
              echo "Unknown flavor ${{ matrix.flavor }}"
              exit 1
          esac

          # Do it after we possibly setup HOME
          git config --global user.email "test@github.land"
          git config --global user.name "GitHub Almighty"

          cd $HOME
          export | grep -e crippledfs || :

          git annex test

  test-datalad:
    runs-on: ubuntu-latest
    needs: build-package
    strategy:
      matrix:
        version: [master, maint, release]
      fail-fast: false

    steps:
      - name: Download git-annex package
        uses: actions/download-artifact@v2-preview
        with:
          name: git-annex-debianstandalone-packages

      - name: Install git-annex package
        run: |
          sudo dpkg -i git-annex*.deb

      - name: Set up SSH target
        shell: bash
        # TODO: Drop the release condition once 0.13.1 is released.
        run: |
          if [ "${{ matrix.version }}" != "release" ]; then
            bash tools/ci/prep-travis-forssh.sh;
            export DATALAD_TESTS_SSH=1;
          fi

      - name: Set up environment
        run: |
          git config --global user.email "test@github.land"
          git config --global user.name "GitHub Almighty"

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: install ${{ matrix.version }} datalad
        run: |
          if [ "${{ matrix.version }}" = "release" ]; then
            commitish=$(curl -s https://api.github.com/repos/datalad/datalad/releases/latest | awk '/"tag_name"/{print $2}' | sed -e 's,[",],,g');
          else
            commitish="${{ matrix.version }}";
          fi
          python -m pip install --upgrade pip
          pip install https://github.com/datalad/datalad/archive/${commitish}.zip

      - name: Install nose et al (just in case!)
        run: |
          pip install nose vcrpy mock

      - name: WTF!?
        run: |
          datalad wtf

      - name: Run datalad tests
        run: |
          mkdir -p __testhome__
          cd __testhome__
          python -m nose -s -v datalad
