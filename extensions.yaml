# List of extensions.
# Every extension could have a dict to customize in case of necessary
# additional dependencies, or "non-standard" naming on PyPI or github
#
# name:
#  pypi: <name on pypi, by default the same as the "name"
#  package: <package name to be tested, by default the same as the "name"
#  apt_depends:  # dependencies to install via APT necessary for testing
#  - package1
#  - ...
#  cron_time: <cron expression for scheduled runs>
#
# If no customizations necessary, just place "None" as the value
#
# TODOs:
# - Extensions ATM expected to provide [devel] extras_require. TODO: add
#   option to avoid
# - Add matrix run for "master" of the extension, not just released
#   version.  For that would need github field with org/name unless
#   it is "datalad/name"
#

extensions:
 datalad_neuroimaging:
  apt_depends: [dcm2niix]
  cron_time: '00 01 * * *'
  ci: AppVeyor
  ci-user: mih
 # TODO: Waiting on PyPI release.
 #datalad_catalog:
 # cron_time: '50 01 * * *'
 # tester: pytest
 datalad_container:
  apt_depends: [singularity-container]
  cron_time: '20 01 * * *'
  tester: pytest
 datalad_fuse:
  cron_time: '30 01 * * *'
  tester: pytest
  # TODO: provide pytest --libfuse testing
 datalad_metalad:
  pypi: datalad-metalad
  tester: pytest
  cron_time: '40 01 * * *'
 datalad_crawler:
  tester: pytest
  cron_time: '00 02 * * *'
 datalad_osf:
  cron_time: '00 02 * * *'
  ci: AppVeyor
  ci-user: mih
 # disabled since not actively developed etc
 #datalad_webapp:
 # pypi: datalad-webapp
 # package: datalad_webapp
 # tester: pytest
 # cron_time: '20 02 * * *'
 datalad_ukbiobank:
  cron_time: '00 03 * * *'
  ci: AppVeyor
  ci-user: mih
  tester: pytest
 datalad_mihextras:
  github: mih/datalad-mihextras
  cron_time: '40 02 * * *'
  ci: AppVeyor
  ci-user: mih
 datalad_next:
  cron_time: '00 05 * * *'
  ci: AppVeyor
  ci-user: mih
  tester: pytest
 datalad_deprecated:
  cron_time: '00 04 * * *'
  ci: AppVeyor
  ci-user: mih
 datalad_xnat:
  cron_time: '00 02 * * *'
  ci: AppVeyor
  ci-user: mih
